/*
 * Copyright 2013 Chris Banes
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'

// This is the library version used when deploying the artifact
version = VERSION_NAME
group = "com.chenanze"

def siteUrl = 'https://github.com/chenanze/ProdMapper'      // Homepage URL of the library
def gitUrl = 'https://github.com/chenanze/RxBusManager.git'   // Git repository URL

afterEvaluate { project ->

    if (project.getPlugins().hasPlugin('com.android.application') ||
            project.getPlugins().hasPlugin('com.android.library')) {
        task install(type: Upload, dependsOn: assemble) {
            repositories.mavenInstaller {
                configuration = configurations.archives

//                pom.groupId = projectGroup
//                pom.artifactId = project.getName()
//                pom.version = projectVersion

                pom.project {
                    groupId GROUP
                    artifactId = project.getName()
                    version = VERSION_NAME

                    name 'ProdMapper1'
                    packaging 'aar'
                    description POM_DESCRIPTION
                    url POM_URL

                    scm {
                        url POM_SCM_URL
                        connection POM_SCM_CONNECTION
                        developerConnection POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name POM_LICENCE_NAME
                            url POM_LICENCE_URL
                            distribution POM_LICENCE_DIST
                        }
                    }

                    developers {
                        developer {
                            id POM_DEVELOPER_ID
                            name POM_DEVELOPER_NAME
                            email EMAIL
                        }
                    }
                }
            }
        }

        task androidJavadocs(type: Javadoc) {
            source = android.sourceSets.main.java.source
            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        }

        task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
            classifier = 'javadoc'
            from androidJavadocs.destinationDir
        }

        task androidSourcesJar(type: Jar) {
            classifier = 'sources'
            from android.sourceSets.main.java.source
        }
    } else {
//        artifactId = ""
//        if (project.getName() == "prodmapper-annotation") {
//            artifactId = "prodmapper-annotation"
//        } else if (project.getName() == "prodmapper-compiler") {
//            artifactId = "prodmapper-compiler"
//        }
        print("project.getName()---------------->: " + project.getName() + "\n")
        print("project.getGroup()---------------->: " + project.getGroup() + "\n")
        print("project.getVersion()---------------->: " + project.getVersion() + "\n")
        install {
            repositories.mavenInstaller {
//                pom.groupId = projectGroup
//                pom.artifactId = artifactId
//                pom.version = projectVersion
//                pom.groupId = projectGroup
//                pom.artifactId = project.getName()
//                pom.version = projectVersion

                pom.project {
//                    name POM_NAME
                    name 'ProdMapper'
                    groupId 'com.chenanze'
                    artifactId = project.getName()
                    version = '1.0.0'

                    packaging 'aar'
                    description POM_DESCRIPTION
                    url POM_URL

                    scm {
                        url POM_SCM_URL
                        connection POM_SCM_CONNECTION
                        developerConnection POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name POM_LICENCE_NAME
                            url POM_LICENCE_URL
                            distribution POM_LICENCE_DIST
                        }
                    }

                    developers {
                        developer {
                            id POM_DEVELOPER_ID
                            name POM_DEVELOPER_NAME
                            email EMAIL
                        }
                    }
                }
            }
        }


        task sourcesJar(type: Jar, dependsOn: classes) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }

    }



    if (project.getPlugins().hasPlugin('com.android.application') ||
            project.getPlugins().hasPlugin('com.android.library')) {
        artifacts {
            archives androidSourcesJar
            archives androidJavadocsJar
        }
    } else {
        artifacts {
            archives javadocJar
            archives sourcesJar
        }
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")
        configurations = ['archives']
        pkg {
            repo = "maven"
            name = "ProdMapper"    //发布到JCenter上的项目名字
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = ["Apache-2.0"]
            publish = true
            version {
                name = '1.0.0' //Bintray logical version name
                desc = 'Auto generate method that can mapper an entity class to another entity class.'
                vcsTag = '1.0.0'
            }
        }
    }
}